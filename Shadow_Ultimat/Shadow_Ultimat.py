from herokutl.types import Message
from .. import loader, utils

@loader.tds
class Shadow_Ultimat(loader.Module):
    """Shadow Ultimat Auto Farm Manager for @bfgbunker_bot"""
    strings = {
        "name": "Shadow_Ultimat",
        "version": "7.7.7",
        "author": "@familiarrrrrr",
        "sh_desc": "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ-—Ñ–µ—Ä–º—ã –¥–ª—è @bfgbunker_bot",
        "sh_status": "üìì | Shadow_Ultimat | ~ [ v{} ]\n‚ïî‚ïê‚ï£‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n‚ïë  üîª–°–¢–ê–¢–£–° |üí£| BFGBüîª\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£\n",
        "sh_people": "‚ïë~$ üë´ –õ—é–¥–∏: {}\n",
        "sh_bonus": "‚ïë~$ üéÅ –ë–æ–Ω—É—Å: {}\n",
        "sh_petrol": "‚ïë~$ üõ¢ –ë–µ–Ω–∑–∏–Ω: {}\n",
        "sh_greenhouse": "‚ïë~$ üå± –¢–µ–ø–ª–∏—Ü–∞: {}\n",
        "sh_wasteland": "‚ïë~$ üèú –ü—É—Å—Ç–æ—à—å: {}\n",
        "sh_garden": "‚ïë~$ üå≥ –°–∞–¥: {}\n",
        "sh_mine": "‚ïë~$ ‚õè –®–∞—Ö—Ç–∞: {}\n",
        "sh_guild": "‚ïë~$ üèõ –ì–∏–ª—å–¥–∏—è: {}\n",
        "sh_commands": "‚ïëüëÅ‚Äçüó® –ö–æ–º–∞–Ω–¥—ã:\n",
        "sh_cmd_template": "‚ï†‚ïê‚ï£<code>{}{}</code> - –≤–∫–ª/–≤—ã–∫–ª\n",
        "sh_footer": "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê",
        "pref_desc": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å",
        "pref_updated": "üíª –í–∞—à –ø—Ä–µ—Ñ–∏–∫—Å –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ø–æ–¥—Å–∫–∞–∑–∫–∞—Ö –Ω–∞ {}"
    }
    strings_ru = strings

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue("version", "7.7.7", "Current module version", validator=loader.validators.String()),
            loader.ConfigValue("prefix", ".", "Current command prefix", validator=loader.validators.String()),
        )
        self.statuses = {
            "people": False,
            "bonus": False,
            "petrol": False,
            "greenhouse": False,
            "wasteland": False,
            "garden": False,
            "mine": False,
            "guild": False
        }
        self._db.set("statuses", self.statuses)  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
        if not self._db.get("prefix", None):
            self._db.set("prefix", self.config["prefix"])

    def get_prefix(self):
        return self._db.get("prefix", ".")

    @loader.command(ru_doc="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ-—Ñ–µ—Ä–º—ã –¥–ª—è @bfgbunker_bot")
    async def sh(self, message: Message):
        """Show auto-farm status for @bfgbunker_bot"""
        statuses = self._db.get("statuses", self.statuses)
        prefix = self.get_prefix()
        status_msg = self.strings["sh_status"].format(self.strings["version"])
        for key, value in statuses.items():
            status_msg += self.strings[f"sh_{key}"].format("‚úÖ" if value else "‚õîÔ∏è")
        status_msg += self.strings["sh_commands"]
        for cmd in ["–ª—é–¥–∏", "–±–æ–Ω—É—Å", "–±–µ–Ω–∑–∏–Ω", "—Ç–µ–ø–ª–∏—Ü–∞", "–ø—É—Å—Ç–æ—à—å", "—Å–∞–¥", "—à–∞—Ö—Ç–∞", "–≥–∏–ª—å–¥–∏—è"]:
            status_msg += self.strings["sh_cmd_template"].format(prefix, cmd)
        status_msg += self.strings["sh_footer"]
        await utils.answer(message, status_msg)

    @loader.command(ru_doc="–í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ-—Ñ–µ—Ä–º—É –¥–ª—è –ª—é–¥–µ–π –≤ @bfgbunker_bot")
    async def –ª—é–¥–∏(self, message: Message):
        """Toggle people auto-farm for @bfgbunker_bot"""
        await self._toggle_status("people", message)

    @loader.command(ru_doc="–í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ-—Ñ–µ—Ä–º—É –¥–ª—è –±–æ–Ω—É—Å–æ–≤ –≤ @bfgbunker_bot")
    async def –±–æ–Ω—É—Å(self, message: Message):
        """Toggle bonus auto-farm for @bfgbunker_bot"""
        await self._toggle_status("bonus", message)

    @loader.command(ru_doc="–í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ-—Ñ–µ—Ä–º—É –¥–ª—è –±–µ–Ω–∑–∏–Ω–∞ –≤ @bfgbunker_bot")
    async def –±–µ–Ω–∑–∏–Ω(self, message: Message):
        """Toggle petrol auto-farm for @bfgbunker_bot"""
        await self._toggle_status("petrol", message)

    @loader.command(ru_doc="–í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ-—Ñ–µ—Ä–º—É –¥–ª—è —Ç–µ–ø–ª–∏—Ü—ã –≤ @bfgbunker_bot")
    async def —Ç–µ–ø–ª–∏—Ü–∞(self, message: Message):
        """Toggle greenhouse auto-farm for @bfgbunker_bot"""
        await self._toggle_status("greenhouse", message)

    @loader.command(ru_doc="–í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ-—Ñ–µ—Ä–º—É –¥–ª—è –ø—É—Å—Ç–æ—à–∏ –≤ @bfgbunker_bot")
    async def –ø—É—Å—Ç–æ—à—å(self, message: Message):
        """Toggle wasteland auto-farm for @bfgbunker_bot"""
        await self._toggle_status("wasteland", message)

    @loader.command(ru_doc="–í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ-—Ñ–µ—Ä–º—É –¥–ª—è —Å–∞–¥–∞ –≤ @bfgbunker_bot")
    async def —Å–∞–¥(self, message: Message):
        """Toggle garden auto-farm for @bfgbunker_bot"""
        await self._toggle_status("garden", message)

    @loader.command(ru_doc="–í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ-—Ñ–µ—Ä–º—É –¥–ª—è —à–∞—Ö—Ç—ã –≤ @bfgbunker_bot")
    async def —à–∞—Ö—Ç–∞(self, message: Message):
        """Toggle mine auto-farm for @bfgbunker_bot"""
        await self._toggle_status("mine", message)

    @loader.command(ru_doc="–í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ-—Ñ–µ—Ä–º—É –¥–ª—è –≥–∏–ª—å–¥–∏–∏ –≤ @bfgbunker_bot")
    async def –≥–∏–ª—å–¥–∏—è(self, message: Message):
        """Toggle guild auto-farm for @bfgbunker_bot"""
        await self._toggle_status("guild", message)

    async def _toggle_status(self, key, message):
        """Toggle the status of a specific auto-farm"""
        statuses = self._db.get("statuses", self.statuses)
        statuses[key] = not statuses[key]
        self._db["statuses"] = statuses  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –≤–º–µ—Å—Ç–æ set, –µ—Å–ª–∏ set –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏
        await utils.answer(message, f"–ê–≤—Ç–æ-—Ñ–µ—Ä–º–∞ –¥–ª—è {key} –≤ @bfgbunker_bot —Ç–µ–ø–µ—Ä—å {'–≤–∫–ª—é—á–µ–Ω–∞ ‚úÖ' if statuses[key] else '–≤—ã–∫–ª—é—á–µ–Ω–∞ ‚õîÔ∏è'}")

    @loader.command(ru_doc="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å")
    async def pref(self, message: Message):
        """Set a new command prefix"""
        args = utils.get_args(message)
        if not args or len(args) != 1:
            await utils.answer(message, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .pref <–ø—Ä–µ—Ñ–∏–∫—Å>")
            return
        new_prefix = args[0]
        self._db["prefix"] = new_prefix  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –≤–º–µ—Å—Ç–æ set
        await utils.answer(message, self.strings["pref_updated"].format(new_prefix))
